#!/bin/bash
# mapreduce


# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail 

# Sanity check command line options
usage() {
  echo "Usage: $0 (start|stop|status)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi


case $1 in
  "start")
    output1="$(pgrep -f scoreScraper || true)"
    if ! [ -z "$output1" ]; then
        echo "Error: scoreScraper is already running"
        echo "Try: ./bin/scrape stop"
        exit 1
    fi

    echo "starting scoreScraper ..."
    rm -rf var || true
    mkdir var
    scoreScraper-start --host localhost --port 6000 --logfile var/updater.log &
    sleep 2
    ;;

  "stop")
    set +o pipefail  # Avoid erroneous failures due to grep returning non-zero
    if nc -h 2>&1 | grep -q "\-c"; then
    NC="nc -c"
    elif nc -h 2>&1 | grep -q "\-N"; then
    NC="nc -N"
    elif nc -h 2>&1 | grep -q "\-C"; then
    NC="nc -C"
    else
    echo "Error detecting netcat version."
    exit 1
    fi
    set -o pipefail

    echo "stopping scoreScraper ..."
    echo '{"message_type": "shutdown"}' | $NC localhost 6000 || true
    sleep 20  # give the Manager time to receive signal and send to Workers

    if pgrep -f scoreScraper &> /dev/null; then
      echo "killing scoreScraper ..."
      pkill -f scoreScraper || true
    fi
    ;;

  "status")
    output1="$(pgrep -f scoreScraper || true)"
    if ! [ -z "$output1" ]; then
        echo "scoreScraper is running"
        exit 1
    else 
        echo "scoreScraper is stopped"
    fi
    ;;
esac

  